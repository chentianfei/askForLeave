<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns="http://xmlns.jcp.org/xml/ns/javaee"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://xmlns.jcp.org/xml/ns/javaee http://xmlns.jcp.org/xml/ns/javaee/web-app_4_0.xsd"
         version="4.0">


    <welcome-file-list>
        <welcome-file>login.jsp</welcome-file>
    </welcome-file-list>

    <session-config>
        <session-timeout>30</session-timeout>
    </session-config>

    <!--定时器-->
    <servlet>
        <servlet-name>QuartzInitializer</servlet-name>
        <servlet-class>org.quartz.ee.servlet.QuartzInitializerServlet</servlet-class>
        <init-param>
            <param-name>config-file</param-name>
            <param-value>/quartz.properties</param-value>
        </init-param>
        <!-- shutdown-on-unload，表示是否在卸载应用时同时停止调度，该参数推荐true，否则你的tomcat进程可能停不下来 -->
        <init-param>
            <param-name>shutdown-on-unload</param-name>
            <param-value>true</param-value>
        </init-param>
        <!-- start-scheduler-on-load，表示应用加载时就启动调度器，如果为false，则quartz.properties中指定的调度器在用户访问这个Servlet之后才会加载，在此之前，如果你通过ServletContext查找SchedulerFactory是可以找到的，但是要得到具体的Scheduler，那么你一定会发现Jvm抛出了一个NullPointerExcetion。 -->
        <init-param>
            <param-name>start-scheduler-on-load</param-name>
            <param-value>true</param-value>
        </init-param>
        <!--load-on-startup是指定QuartzServlet是否随应用启动，-1表示否，正数表示随应用启动，数值越小，则优先权越高  -->
        <load-on-startup>1</load-on-startup>
    </servlet>
    <servlet-mapping>
        <servlet-name>QuartzInitializer</servlet-name>
        <url-pattern>/quartzInitializer</url-pattern>
    </servlet-mapping>

    <!--启动阿里云短信返回信息监听-->
   <!-- <listener>
        <listener-class>com.ctf.web.Listener.AliyunSmsListener</listener-class>
    </listener>-->

</web-app>